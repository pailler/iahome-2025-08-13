require('dotenv').config({ path: '.env.local' });
const Stripe = require('stripe');

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

async function checkStripeEvents() {
  try {
    console.log('üîç V√©rification des √©v√©nements Stripe r√©cents...');
    
    // R√©cup√©rer les √©v√©nements r√©cents
    const events = await stripe.events.list({
      limit: 20,
      types: ['checkout.session.completed', 'payment_intent.succeeded']
    });
    
    console.log(`üìã ${events.data.length} √©v√©nements r√©cents trouv√©s:`);
    
    for (const event of events.data) {
      console.log(`\nüîç √âv√©nement ${event.type} (${event.created}):`);
      console.log(`  ID: ${event.id}`);
      
      if (event.type === 'checkout.session.completed') {
        const session = event.data.object;
        console.log(`  Email: ${session.customer_email || session.customer_details?.email}`);
        console.log(`  Montant: ${session.amount_total}`);
        console.log(`  M√©tadonn√©es:`, session.metadata);
        
        // V√©rifier si c'est pour regispailler@gmail.com
        const customerEmail = session.customer_email || session.customer_details?.email;
        if (customerEmail === 'regispailler@gmail.com') {
          console.log('  ‚úÖ √âv√©nement pour regispailler@gmail.com trouv√©!');
          console.log('  üìã D√©tails complets:', JSON.stringify(session, null, 2));
        }
      }
      
      if (event.type === 'payment_intent.succeeded') {
        const paymentIntent = event.data.object;
        console.log(`  Email: ${paymentIntent.metadata?.customer_email}`);
        console.log(`  Montant: ${paymentIntent.amount}`);
        console.log(`  M√©tadonn√©es:`, paymentIntent.metadata);
        
        // V√©rifier si c'est pour regispailler@gmail.com
        if (paymentIntent.metadata?.customer_email === 'regispailler@gmail.com') {
          console.log('  ‚úÖ √âv√©nement pour regispailler@gmail.com trouv√©!');
          console.log('  üìã D√©tails complets:', JSON.stringify(paymentIntent, null, 2));
        }
      }
    }
    
    // Chercher sp√©cifiquement les sessions de checkout pour regispailler@gmail.com
    console.log('\nüîç Recherche sp√©cifique des sessions checkout pour regispailler@gmail.com...');
    const sessions = await stripe.checkout.sessions.list({
      limit: 10,
      customer_email: 'regispailler@gmail.com'
    });
    
    if (sessions.data.length > 0) {
      console.log(`üìã ${sessions.data.length} sessions checkout trouv√©es:`);
      sessions.data.forEach(session => {
        console.log(`\n  Session ${session.id}:`);
        console.log(`    Status: ${session.status}`);
        console.log(`    Montant: ${session.amount_total}`);
        console.log(`    M√©tadonn√©es:`, session.metadata);
        console.log(`    Cr√©√©e: ${new Date(session.created * 1000).toISOString()}`);
      });
    } else {
      console.log('  Aucune session checkout trouv√©e pour regispailler@gmail.com');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification des √©v√©nements Stripe:', error);
  }
}

checkStripeEvents(); 